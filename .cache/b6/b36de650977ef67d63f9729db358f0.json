{"id":"critical.js","dependencies":[{"name":"/root/github/cheatsheets/.babelrc","includedInParent":true,"mtime":1688464615031},{"name":"/root/github/cheatsheets/package.json","includedInParent":true,"mtime":1688520553682},{"name":"./wrapify","loc":{"line":6,"column":20,"index":149},"parent":"/root/github/cheatsheets/_parcel/critical.js","resolved":"/root/github/cheatsheets/_parcel/wrapify/index.js"},{"name":"dom101/add-class","loc":{"line":7,"column":21,"index":182},"parent":"/root/github/cheatsheets/_parcel/critical.js","resolved":"/root/github/cheatsheets/node_modules/dom101/add-class.js"},{"name":"dom101/on","loc":{"line":8,"column":15,"index":216},"parent":"/root/github/cheatsheets/_parcel/critical.js","resolved":"/root/github/cheatsheets/node_modules/dom101/on.js"}],"generated":{"js":"\"use strict\";\n\nvar _wrapify = _interopRequireDefault(require(\"./wrapify\"));\nvar _addClass = _interopRequireDefault(require(\"dom101/add-class\"));\nvar _on = _interopRequireDefault(require(\"dom101/on\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/*\n * This is the \"critical path\" JavaScript that will be included INLINE on every\n * page. Keep this as small as possible!\n */\n\n// Transform the main body markup to make it readable.\nvar body = document.querySelector('[data-js-main-body]');\nif (body) {\n  (0, _wrapify.default)(body);\n  (0, _addClass.default)(body, '-wrapified');\n}\n\n// Be \"done\" when we're done, or after a certain timeout.\n(0, _on.default)(window, 'load', done);\nsetTimeout(done, 5000);\nvar isDone;\nfunction done() {\n  if (isDone) return;\n  (0, _addClass.default)(document.documentElement, 'LoadDone');\n  isDone = true;\n}"},"sourceMaps":null,"error":null,"hash":"cf2f250b1cc2a74c2b97533990bdc0d3","cacheData":{"env":{}}}