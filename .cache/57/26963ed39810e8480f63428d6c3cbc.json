{"id":"helpers/store.js","dependencies":[{"name":"/root/github/cheatsheets/.babelrc","includedInParent":true,"mtime":1688464615031},{"name":"/root/github/cheatsheets/package.json","includedInParent":true,"mtime":1688520553682}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetch = fetch;\nexports.update = update;\n/**\n * Updates a local storage key. If it doesn't exist, it defaults to an empty\n * object.\n *\n * @example\n *     update('dismissed', (data) => {\n *       data.lol = true\n *       return data\n *     })\n */\n\nfunction update(key, fn) {\n  if (!window.localStorage) return;\n  var data = JSON.parse(window.localStorage[key] || '{}');\n  data = fn(data);\n  window.localStorage[key] = JSON.stringify(data);\n}\n\n/**\n * Fetches a local storage key.\n *\n * @example\n *     const data = fetch('dismissed')\n */\n\nfunction fetch(key) {\n  if (!window.localStorage) return;\n  return JSON.parse(window.localStorage[key] || '{}');\n}"},"sourceMaps":null,"error":null,"hash":"609b9036b7e2da61a992bd4c9ccd544e","cacheData":{"env":{}}}